Traceback (most recent call last):
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/kristian/miniforge3/envs/IND320_2024/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create a river stream that counts the number of characters in the 'msg' part of the 'item' dictionary and plots it
import matplotlib.pyplot as plt
from river.stats import Mean
from IPython import display
import time
messages = 20
i = 0
message_length = [np.nan] * messages
mean_length = [np.nan] * messages
mean = Mean()
if is_online:
    figure, ax = plt.subplots(figsize=(7,2))
    plt.ion()
    for item in twitch_chat:
        if i < messages:
            message_length[i] = len(item['msg'])
            mean = mean.update(message_length[i]) # river stats
            mean_length[i] = mean.get()
            plt.clf()
            plt.plot(list(range(messages)), message_length, label='Message length')
            plt.plot(list(range(messages)), mean_length, label='Mean message length')
            plt.xlim(0, messages-1)
            plt.legend(loc='upper right')
            display.display(plt.gcf())
            display.clear_output(wait=True)
            time.sleep(0.0001)
            i += 1
        else:
            print("Puh, that's enough!")
            break
plt.show()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[15], line 18[0m
[1;32m     16[0m message_length[i] [38;5;241m=[39m [38;5;28mlen[39m(item[[38;5;124m'[39m[38;5;124mmsg[39m[38;5;124m'[39m])
[1;32m     17[0m mean [38;5;241m=[39m mean[38;5;241m.[39mupdate(message_length[i]) [38;5;66;03m# river stats[39;00m
[0;32m---> 18[0m mean_length[i] [38;5;241m=[39m [43mmean[49m[38;5;241;43m.[39;49m[43mget[49m()
[1;32m     19[0m plt[38;5;241m.[39mclf()
[1;32m     20[0m plt[38;5;241m.[39mplot([38;5;28mlist[39m([38;5;28mrange[39m(messages)), message_length, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mMessage length[39m[38;5;124m'[39m)

[0;31mAttributeError[0m: 'NoneType' object has no attribute 'get'

